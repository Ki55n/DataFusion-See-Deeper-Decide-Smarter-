generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_DB_URL")
}

model User {
  id             String          @id
  name           String
  email          String          @unique
  projects       Project[]
  visualizations Visualization[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt

  @@map("users")
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String
  status      String    @default("inactive")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  files       File[]
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String

  @@index([userId])
  @@map("projects")
}

model File {
  id            String   @id @default(uuid())
  name          String
  size          Int
  description   String?
  dateUploaded  DateTime @default(now())
  file_uuid     String   @unique
  project       Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId     String
  visualizations Visualization[]
  
  file_path     String?  // Path of uploaded CSV (if stored)
  table_name    String?  // PostgreSQL table name for this file's data

  @@index([projectId])
  @@map("files")
}

model Visualization {
  id                String   @id @default(uuid())
  visualizationType String
  description       String?
  summary           String?
  data              Json
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  layout            Json
  file              File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  fileId            String
  fileName          String
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String

  @@index([fileId])
  @@index([userId])
  @@map("visualizations")
}
